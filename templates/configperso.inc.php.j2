<?php

/*
$nb_year_calendar permet de fixer la plage de choix de l'année dans le choix des dates de début et fin des réservations
La plage s'étend de année_en_cours - $nb_year_calendar à année_en_cours + $nb_year_calendar
Par exemple, si on fixe $nb_year_calendar = 5 et que l'on est en 2005, la plage de choix de l'année s'étendra de 2000 à 2010
*/
$nb_year_calendar = {{ grr_config_year_calendar }};

date_default_timezone_set('{{ grr_config_default_timezone }}');

# Changement d'heure été<->hiver
# $correct_heure_ete_hiver = 1 => GRR prend en compte les changements d'heure
# $correct_heure_ete_hiver = 0 => GRR ne prend en compte les changements d'heure
# Par défaut ($correct_heure_ete_hiver non définie) GRR prend en compte les changements d'heure.
 $correct_heure_ete_hiver = {{ grr_config_correct_winter_time }};

# Affichage d'un domaine par defaut en fonction de l'adresse IP de la machine cliente (voir documentation)
# Mettre 0 ou 1 pour désactiver ou activer la fonction dans la page de gestion des domaines
 $gOptionIp = {{ grr_config_default_domain_by_ip }});

# Nombre maximum (+1) de réservations autorisés lors d'une réservation avec périodicité
 $max_rep_entrys = {{ grr_config_max_periodic_reservation }};

#L'admin peut restaurer une base depuis l'administration || 0: non ; 1: oui - Defaut 1
$restaureBBD = {{ grr_config_restore_db_admin_page }};

#Mode debug || 0: non ; 1: oui - Defaut 0
$debug_flag = {{ grr_config_debug_flag }};

#Rechercher des MAJ sur le serveur grr.devome.com || 0: non ; 1: oui - Defaut 1
$recherche_MAJ = {{ grr_config_search_update }};

#Activer la possibilité d'utiliser l'option forcer MAJ || 0: non ; 1: oui - Defaut 1
$forcer_MAJ = {{ grr_allow_force_update }};

# Nb de jour maximum que l'on garde les logs de connexions, 0 = aucune limite
$nbMaxJoursLogConnexion = {{ grr_config_max_log_keep }};

# Nb de jour maximum que l'on garde les logs des mails envoyés, 0 = aucune limite
$nbMaxJoursLogEmail = {{ grr_config_max_email_day_keep }};

##################################################
# Cas d'une authentification via config.inc.php  #
##################################################
$motDePasseConfig = "{{ grr_config_auth_with_configinc }}"; // vide = ignoré

###################################
# Cas d'une authentification SSO  #
###################################

/*
 $sso_restrictions : false|true
 Mettre la valeur du paramètre $sso_restrictions à "true" permet de cacher dans l'interface de GRR l'affichage de la rubrique "Configuration SSO"
*/
 $sso_restrictions = {{ grr_config_sso_hide_interface }};

/*
 $ldap_restrictions : false|true
 Mettre la valeur du paramètre $ldap_restrictions à "true" permet de cacher dans l'interface de GRR l'affichage de la rubrique "Configuration LDAP"
*/
 $ldap_restrictions = {{ grr_config_ldap_hide_interface }};

/*
 $imap_restrictions : false|true
 Mettre la valeur du paramètre $imap_restrictions à "true" permet de cacher dans l'interface de GRR l'affichage de la rubrique "Configuration IMAP"
*/
 $imap_restrictions = {{ grr_config_imap_hide_interface }};

// Le paramètre $Url_CAS_setFixedServiceURL est le paramètre utilisé dans la méthode phpCAS::setFixedServiceURL(), dans le fichier cas.inc.php
// Si ce paramètre est non vide, il sera utilisé par le service CAS
// Set the fixed URL that will be set as the CAS service parameter. When this method is not called, a phpCAS script uses its own URL.
 $Url_CAS_setFixedServiceURL = '{{ grr_config_CAS_setFixedServiceURL }}';
?>
